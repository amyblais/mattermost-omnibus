- name: "Jitsi"
  block:
    - name: "Jitsi nginx setup"
      block:
        - name: "Generate NGINX jitsi certificate"
          block:
            - name: "Ensure that NGINX is running"
              systemd: "name=nginx state=started"

            - name: "Generate SSL Certificate"
              command: "certbot certonly --nginx -d {{ jitsi_fqdn }} -n --agree-tos --email \"{{ email }}\""
          when: https

        - name: "Configure NGINX https template"
          template:
            src: jitsi.conf
            dest: /etc/nginx/conf.d/jitsi.conf
            owner: root
            group: root
            mode: 0644

        - name: "Configure the tunrserver nginx routing if https"
          block:
            - name: "Configure NGINX turnserver"
              template:
                src: turnserver.conf
                dest: /etc/nginx/turnserver.conf
                owner: root
                group: root
                mode: 0644

            - name: "Configure NGINX turnserver stream in nginx.conf"
              blockinfile:
                dest: /etc/nginx/nginx.conf
                block: |
                  include '/etc/nginx/turnserver.conf';
          when: https

        - name: "Remove the turnserver nginx routing if not https"
          block:
            - name: "Delete turnserver NGINX configuration file"
              file: "path=/etc/nginx/turnserver.conf state=absent"

            - name: "Remove NGINX turnserver stream from nginx.conf"
              blockinfile:
                dest: /etc/nginx/nginx.conf
                state: absent
                block: |
                  include '/etc/nginx/turnserver.conf';
          when: not https
      when: jitsi_enabled

    - name: "Removing jitsi nginx config"
      block:
        - name: "Configure NGINX turn server stream template"
          blockinfile:
            dest: /etc/nginx/nginx.conf
            state: absent
            block: |
              include '/etc/nginx/turnserver.conf';

        - name: "Delete jitsi NGINX configuration file"
          file: "path=/etc/nginx/conf.d/jitsi.conf state=absent"

        - name: "Delete turnserver NGINX configuration file"
          file: "path=/etc/nginx/turnserver.conf state=absent"

        - name: "Remove NGINX turnserver stream from nginx.conf"
          blockinfile:
            dest: /etc/nginx/nginx.conf
            state: absent
            block: |
              include '/etc/nginx/turnserver.conf';

      when: not jitsi_enabled

    - name: "jitsi debconf"
      block:

      - name: "Update jitsi debconf variables with json file values"
        debconf:
          name: mattermost-omnibus-jitsi
          vtype: string
          question: "{{ item.key }}"
          value: "{{ item.value }}"
        with_dict:
          jitsi-meet-prosody/jvb-hostname: "{{jitsi_fqdn|default('omnibus-jitsi', true)}}"
          jicofo/jvb-hostname: "{{jitsi_fqdn|default('omnibus-jitsi', true)}}"
          jicofo/jicofo-auth-user: focus
          jicofo/jicofo-authpassword: "{{jitsi_focus_password}}"
          jicofo/jicofosecret: "{{jitsi_focus_secret}}"
          jitsi-videobridge/jvb-hostname: "{{jitsi_fqdn|default('omnibus-jitsi', true)}}"
          jitsi-videobridge/jvbsecret: "{{jitsi_jvb_secret}}"
          jitsi-videobridge2/jvb-hostname: "{{jitsi_fqdn|default('omnibus-jitsi', true)}}"
          jitsi-videobridge2/jvbsecret: "{{jitsi_jvb_secret}}"
        # When the playbook is run as part of a dpkg-reconfigure,
        # debconf is already updated by the postinst script, so this
        # task will fail but the value will still be synced
        ignore_errors: True

    - name: "Jitsi installation"
      block:
        - name: "Add jitsi repo key"
          apt_key:
            id: 66A9CD0595D6AFA247290D3BEF8B479E2DC1389C
            url: https://download.jitsi.org/jitsi-key.gpg.key
            state: present
        - name: "Add prosody repo key"
          apt_key:
            id: 107D65A0A148C237FDF00AB47393D7E674D9DBB5
            url: https://prosody.im/files/prosody-debian-packages.key
            state: present
        - name: "Add jitsi repository"
          apt_repository:
            repo: deb https://download.jitsi.org stable/
            state: present
        - name: "Add prosody repository"
          apt_repository:
            repo: deb https://packages.prosody.im/debian focal main
            state: present
        - name: "Configure /etc/hosts"
          lineinfile:
            path: /etc/hosts
            regexp: '^127\.0\.0\.1 omnibus-jitsi'
            line: 127.0.0.1 omnibus-jitsi {{ jitsi_fqdn }} {{ jitsi_fqdn.split(".") | first }}
            state: present
            owner: root
            group: root
            mode: '0644'
        - name: "Install jitsi"
          apt:
            pkg:
              - jitsi-meet-web
              - jitsi-meet-prosody
              - jicofo
              - coturn
              - dnsutils
              - jitsi-videobridge2
            state: present
        - name: "Create jitsi config directory"
          file:
            path: /etc/jitsi/meet
            state: directory
            mode: 0755
        - name: "Configure jitsi meet"
          template:
            src: jitsi-config.js
            dest: /etc/jitsi/meet/config.js
            owner: root
            group: root
            mode: 0644
        - name: "Configure jitsi meet interface"
          template:
            src: jitsi-interface-config.js
            dest: /etc/jitsi/meet/interface_config.js
            owner: root
            group: root
            mode: 0644
        - name: "Configure Jitsi videobridge"
          template:
            src: videobridge.config
            dest: /etc/jitsi/videobridge/config
            owner: root
            group: root
            mode: 0644
        - name: "Configure the jitsi video bridge sip communicator"
          template:
            src: videobridge.sip-communicator
            dest: /etc/jitsi/videobridge/sip-communicator.properties
            owner: root
            group: root
            mode: 0644
        - name: "Configure Jitsi jicofo"
          template:
            src: jicofo.config
            dest: /etc/jitsi/jicofo/config
            owner: root
            group: root
            mode: 0644
        - name: "Configure prosody"
          template:
            src: prosody.cfg.lua
            dest: "/etc/prosody/conf.d/{{jitsi_fqdn}}.cfg.lua"
            owner: root
            group: root
            mode: 0644
      when: jitsi_installed

    - name: "Enable jitsi"
      block:
        - name: "Register prosody jvb user"
          shell: "prosodyctl register jvb auth.{{ jitsi_fqdn }} {{ jitsi_jvb_secret }} || true"
        - name: "Register prosody focus user"
          shell: "prosodyctl register focus auth.{{ jitsi_fqdn }} {{ jitsi_focus_password }} || true"
        - name: "Enable and restart coturn services"
          systemd:
            name: coturn
            state: restarted
            enabled: yes
            daemon_reload: yes
        - name: "Enable and restart prosody services"
          systemd:
            name: prosody
            state: restarted
            enabled: yes
            daemon_reload: yes
        - name: "Enable and restart jicofo services"
          systemd:
            name: jicofo
            state: restarted
            enabled: yes
            daemon_reload: yes
        - name: "Enable and restart jitsi-videobridge2 services"
          systemd:
            name: jitsi-videobridge2
            state: restarted
            enabled: yes
            daemon_reload: yes
        - name: "Ensure that NGINX gets the right config"
          systemd: "name=nginx state=restarted"
      when: jitsi_enabled and jitsi_installed

    - name: "Disable jitsi"
      block:
        - name: "Disable and stop coturn services"
          systemd:
            name: coturn
            state: stopped
            enabled: false
            daemon_reload: yes
        - name: "Disable and stop prosody services"
          systemd:
            name: prosody
            state: stopped
            enabled: false
            daemon_reload: yes
        - name: "Disable and stop jicofo services"
          systemd:
            name: jicofo
            state: stopped
            enabled: false
            daemon_reload: yes
        - name: "Disable and stop jitsi-videobridge2 services"
          systemd:
            name: jitsi-videobridge2
            state: stopped
            enabled: false
            daemon_reload: yes
        - name: "Ensure that NGINX gets the right config"
          systemd: "name=nginx state=restarted"
      when: not jitsi_enabled and jitsi_installed

    - name: "Jitsi uninstall and cleanup"
      block:
        - name: "Uninstall jitsi"
          apt:
            pkg:
              - jitsi-meet-web
              - jitsi-meet-prosody
              - jicofo
              - coturn
              - dnsutils
              - jitsi-videobridge2
              - prosody
            state: absent
            purge: true
        - name: "Remove /etc/hosts entry"
          lineinfile:
            path: /etc/hosts
            regexp: '^127\.0\.0\.1 omnibus-jitsi'
            state: absent
            owner: root
            group: root
            mode: '0644'
        - name: "Remove jitsi repo key"
          apt_key:
            id: 66A9CD0595D6AFA247290D3BEF8B479E2DC1389C
            state: absent
        - name: "Remove jitsi repository"
          apt_repository:
            repo: deb https://download.jitsi.org stable/
            state: absent
        - name: "Remove prosody repo key"
          apt_key:
            id: 107D65A0A148C237FDF00AB47393D7E674D9DBB5
            state: absent
        - name: "Remove prosody repository"
          apt_repository:
            repo: deb https://packages.prosody.im/debian focal main
            state: absent
      when: not jitsi_installed
